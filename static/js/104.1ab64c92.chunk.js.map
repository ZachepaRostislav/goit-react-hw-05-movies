{"version":3,"file":"static/js/104.1ab64c92.chunk.js","mappings":"8PAEaA,EAAWC,EAAAA,EAAAA,GAAH,0CAGRC,EAAWD,EAAAA,EAAAA,GAAH,2BAIRE,EAAUF,EAAAA,EAAAA,IAAH,8FAMPG,EAAWH,EAAAA,EAAAA,EAAH,0C,SCRN,SAASI,IACtB,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OARAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAUH,GACPI,MAAK,SAAAC,GACJ,IAAMC,EAAeD,EAAKE,KAC1BR,GAAa,SAAAS,GAAa,wBAASA,IAAT,OAA2BF,GAA3B,GAC3B,GACJ,GAAE,CAACN,KAGF,UAACT,EAAD,WACwB,IAArBO,EAAUW,SAAgB,uEAC1BX,EAAUY,KAAI,SAACH,EAAMI,GAAP,OACb,UAAClB,EAAD,YACE,SAACC,EAAD,CAASkB,IAfE,mCAecC,OAAON,EAAKO,cAAeC,IAAKR,EAAKS,iBAC9D,SAACrB,EAAD,UAAWY,EAAKS,iBAChB,SAACrB,EAAD,UAAWY,EAAKU,cAHHN,EADF,MAQpB,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\nlist-style:none;\n`\nexport const CastItem = styled.li`\n \n`\n\nexport const CastImg = styled.img`\n display:block;\n width:300px;\n height:300px;\n object-fit:contain;\n`\nexport const CastText = styled.p`\n font-size:24px;\n`","import { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { fetchCast } from \"services/api\";\nimport { CastImg, CastItem, CastList, CastText } from \"./Cast.styled\";\n\n\nexport default function Cast() {\n  const [castMovie, setCastMovie] = useState([])\n  const { movieId } = useParams()\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  useEffect(() => {\n    fetchCast(movieId)\n      .then(data => {\n        const newCastMovie = data.cast\n        setCastMovie(prevCastMovie => ([...prevCastMovie, ...newCastMovie]))\n      })\n  }, [movieId])\n\n  return (\n    <CastList>\n      {castMovie.length === 0 && <p>Sorry, we don't have any cast on this movie</p>}\n      {castMovie.map((cast, index) =>\n        <CastItem key={index} >\n          <CastImg src={imgBaseUrl.concat(cast.profile_path)} alt={cast.original_name} />\n          <CastText>{cast.original_name}</CastText>\n          <CastText>{cast.character}</CastText>\n        </CastItem>)}\n    </CastList>\n  )\n}\n\nCast.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};"],"names":["CastList","styled","CastItem","CastImg","CastText","Cast","useState","castMovie","setCastMovie","movieId","useParams","useEffect","fetchCast","then","data","newCastMovie","cast","prevCastMovie","length","map","index","src","concat","profile_path","alt","original_name","character"],"sourceRoot":""}