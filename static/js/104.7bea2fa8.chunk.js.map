{"version":3,"file":"static/js/104.7bea2fa8.chunk.js","mappings":"qPAEaA,EAAWC,EAAAA,EAAAA,GAAH,0CAGRC,EAAWD,EAAAA,EAAAA,GAAH,2BAIRE,EAAUF,EAAAA,EAAAA,IAAH,8FAMPG,EAAWH,EAAAA,EAAAA,EAAH,0C,SCTN,SAASI,IACtB,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OAPAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAUH,GACPI,MAAK,SAAAC,GACJN,EAAaM,EAAKC,KACnB,GACJ,GAAE,CAACN,KAGF,UAACT,EAAD,WACwB,IAArBO,EAAUS,SAAgB,uEAC1BT,EAAUU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,UAApC,OACb,UAACnB,EAAD,YACE,SAACC,EAAD,CAASmB,IAAKH,EAfH,mCAgBEI,OAAOJ,GAff,gDAeqCK,IAAKJ,KAC/C,SAAChB,EAAD,UAAWgB,KACX,SAAChB,EAAD,UAAWiB,MAJEH,EADF,MASpB,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\nlist-style:none;\n`\nexport const CastItem = styled.li`\n \n`\n\nexport const CastImg = styled.img`\n display:block;\n width:300px;\n height:300px;\n object-fit:contain;\n`\nexport const CastText = styled.p`\n font-size:24px;\n`","import { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\";\nimport { fetchCast } from \"services/api\";\nimport { CastImg, CastItem, CastList, CastText } from \"./Cast.styled\";\n\n\nexport default function Cast() {\n  const [castMovie, setCastMovie] = useState([])\n  const { movieId } = useParams()\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n  const plug = \"https://dummyimage.com/600x400/d9d9d9/fff.png\";\n\n  useEffect(() => {\n    fetchCast(movieId)\n      .then(data => {\n        setCastMovie(data.cast)\n      })\n  }, [movieId])\n\n  return (\n    <CastList>\n      {castMovie.length === 0 && <p>Sorry, we don't have any cast on this movie</p>}\n      {castMovie.map(({ id, profile_path, original_name, character }) =>\n        <CastItem key={id} >\n          <CastImg src={profile_path ?\n            imgBaseUrl.concat(profile_path) : plug} alt={original_name} />\n          <CastText>{original_name}</CastText>\n          <CastText>{character}</CastText>\n        </CastItem>)}\n    </CastList>\n  )\n}\n"],"names":["CastList","styled","CastItem","CastImg","CastText","Cast","useState","castMovie","setCastMovie","movieId","useParams","useEffect","fetchCast","then","data","cast","length","map","id","profile_path","original_name","character","src","concat","alt"],"sourceRoot":""}